{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.scss","components/Section/Sectiom.module.scss"],"names":["module","exports","Section","state","title","props","className","s","section","this","children","Component","protoTypes","PropTypes","sting","Statistics","countPositiveFeedbackPercentage","good","neutral","bad","Math","floor","total","positiveFeedback","element","FeedbackOptions","capitalize","string","toUpperCase","substring","options","Object","keys","list","map","option","type","onClick","onLeaveFeedback","func","Notification","message","App","buttonHandler","e","value","currentTarget","dataset","setState","prevState","countTotalFeedback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3b54b3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2U7h_\",\"element\":\"FeedbackOptions_element__2xs_p\"};","import { PropTypes } from 'prop-types';\nimport { Component } from 'react';\nimport s from './Sectiom.module.scss';\n\nexport class Section extends Component {\n  state = {\n    title: this.props.title,\n  };\n\n  render() {\n    return (\n      <section className={s.section}>\n        <h2 className={s.title}>{this.state.title}</h2>\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nSection.protoTypes = {\n  title: PropTypes.sting,\n};\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './Statistics.module.scss';\n\nexport class Statistics extends Component {\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.props;\n\n    return Math.floor((good / (good + neutral + bad)) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad, total } = this.props;\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n    return (\n      <ul>\n        <li className={s.element}>Good:{good}</li>\n        <li className={s.element}>Neutral:{neutral}</li>\n        <li className={s.element}>Bad:{bad}</li>\n        <li className={s.element}>Total:{total}</li>\n        <li className={s.element}>Positive feedback:{positiveFeedback}%</li>\n      </ul>\n    );\n  }\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n};\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './FeedbackOptions.module.scss';\n\nexport class FeedbackOptions extends Component {\n  capitalize = string => {\n    return string[0].toUpperCase() + string.substring(1);\n  };\n\n  render() {\n    const options = Object.keys(this.props.options);\n    return (\n      <ul className={s.list}>\n        {options.map(option => {\n          return (\n            <li key={option} className={s.element}>\n              <button\n                type=\"button\"\n                onClick={this.props.onLeaveFeedback}\n                data-value={option}\n              >\n                {this.capitalize(option)}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nFeedbackOptions.protoTypes = {\n  options: PropTypes.sting,\n  onLeaveFeedback: PropTypes.func,\n};\n","import { Component } from 'react';\nimport { PropTypes } from 'prop-types';\n\nexport class Notification extends Component {\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import { Section } from './components/Section';\nimport { Statistics } from './components/Statistics';\nimport { FeedbackOptions } from './components/FeedbackOptions';\nimport { Notification } from './components/Notification';\nimport { Component } from 'react';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  buttonHandler = e => {\n    const { value } = e.currentTarget.dataset;\n\n    this.setState(prevState => ({ [value]: prevState[value] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.buttonHandler}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          {total === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics good={good} neutral={neutral} bad={bad} total={total} />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"Statistics_element__2RlpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Sectiom_section__2pr-f\",\"title\":\"Sectiom_title__37ABI\"};"],"sourceRoot":""}